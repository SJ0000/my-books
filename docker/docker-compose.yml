version: "3.7"

services:
  nginx:
    image: nginx:1.25.3
    container_name: "nginx"
    restart: unless-stopped
    ports: ["80:80"]
    depends_on:
      - app
    volumes:
      - "./nginx/nginx.conf:/etc/nginx/nginx.conf"

  app:
    image: mybooks
    container_name: "mybooks"
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
    expose: ["${MYBOOKS_PORT}", "${MYBOOKS_ACTUATOR_PORT}"]
    depends_on:
      - redis
      - mysql
    environment:
      TZ: "Asia/Seoul"
      SPRING_PROFILES_ACTIVE: "production"

  mysql:
    image: mysql:8.0
    container_name: "mysql"
    restart: unless-stopped
    ports: ["${MYSQL_PORT}:${MYSQL_PORT}"]
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: user
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: mybooks
      TZ: Asia/Seoul
    volumes:
      - "./mysql:/var/lib/mysql"

  redis:
    image: redis:7.2.3
    container_name: "redis"
    restart: unless-stopped
    expose: ["6379"]
    volumes:
      - "./redis/data:/data"
      - "./redis/redis.conf:/usr/local/etc/redis.conf"
    command: ["redis-server", "/usr/local/etc/redis.conf"]

  prometheus:
    image: prom/prometheus:v2.48.0
    container_name: "prometheus"
    expose: ["9090"]
    restart: unless-stopped
    depends_on:
      - app
    volumes:
      - "./prometheus/config:/etc/prometheus"
      - "./prometheus/volume:/prometheus"

  grafana:
    image: grafana/grafana:10.2.2
    container_name: "grafana"
    ports: ["${GRAFANA_PORT}:${GRAFANA_PORT}"]
    restart: unless-stopped
    environment:
      - "GF_SECURITY_ADMIN_USER=admin"
      - "GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}"
    volumes:
      - "./grafana:/var/lib/grafana"